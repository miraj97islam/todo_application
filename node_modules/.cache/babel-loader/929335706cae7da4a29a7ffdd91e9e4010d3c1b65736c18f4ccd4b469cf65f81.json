{"ast":null,"code":"var _jsxFileName = \"D:\\\\INTERNSHIP at Job Hobe\\\\Official_works\\\\todo_react_app\\\\todo-react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { use, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AddTodo({\n  value,\n  todoList\n}) {\n  // const[newTodo, setNewTodo] = useState(\"\");\n\n  const newTask = {\n    id: uuidv4(),\n    task: value\n  };\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      children: newTask.task\n    }, newTask.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_c = AddTodo;\n;\nfunction App() {\n  _s();\n  const [newInput, setnewInput] = useState(\"\");\n  const [todoList, setTodoList] = useState([]);\n  const addTodo = () => {\n    const newValue = {\n      id: uuidv4(),\n      task: newInput\n    };\n    setTodoList(...todoList, newValue);\n    setnewInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Google Keep\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTodo,\n        children: \"Add input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [\"todoList.map((task)=>\", /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"task.todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"gARCJJ7dvp6iOJjdVQj4PAECwXQ=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"AddTodo\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["logo","use","useState","v4","uuidv4","jsxDEV","_jsxDEV","Fragment","_Fragment","AddTodo","value","todoList","newTask","id","task","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s","newInput","setnewInput","setTodoList","addTodo","newValue","onClick","_c2","$RefreshReg$"],"sources":["D:/INTERNSHIP at Job Hobe/Official_works/todo_react_app/todo-react/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { use, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction AddTodo({value, todoList}){\n  // const[newTodo, setNewTodo] = useState(\"\");\n\n    const newTask=  {\n      id: uuidv4(),\n      task: value\n  }\n\n  return (\n    <ul>\n         <li key = {newTask.id}>\n            {newTask.task}\n         </li>\n    </ul>\n   \n  )\n};\n\n\n\nfunction App() {\n  \n  const[newInput, setnewInput]  = useState(\"\");\n  const[todoList, setTodoList] = useState([]);\n  \n  const addTodo = ()=>{\n     const newValue = {\n      id: uuidv4(),\n      task: newInput\n     }\n\n     setTodoList(...todoList, newValue);\n     setnewInput(\"\");\n  }\n\n  return (\n    <>\n      <div>\n          Google Keep\n      </div>\n\n      <div>\n          <input></input> \n          <button onClick={addTodo}>\n            Add input\n          </button>\n      </div>\n\n      <div>\n          <ul>\n            todoList.map((task)=>{\n              <li>\n                 task.todo\n              </li>\n            })\n          </ul>\n      </div>\n    </>\n    \n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,SAASC,GAAG,EAAEC,QAAQ,QAAQ,OAAO;AACrC,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpC,SAASC,OAAOA,CAAC;EAACC,KAAK;EAAEC;AAAQ,CAAC,EAAC;EACjC;;EAEE,MAAMC,OAAO,GAAG;IACdC,EAAE,EAAET,MAAM,CAAC,CAAC;IACZU,IAAI,EAAEJ;EACV,CAAC;EAED,oBACEJ,OAAA;IAAAS,QAAA,eACKT,OAAA;MAAAS,QAAA,EACIH,OAAO,CAACE;IAAI,GADLF,OAAO,CAACC,EAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEjB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAGT;AAACC,EAAA,GAhBQX,OAAO;AAgBf;AAID,SAASY,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAK,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAItB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAK,CAACS,QAAQ,EAAEc,WAAW,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAE3C,MAAMwB,OAAO,GAAGA,CAAA,KAAI;IACjB,MAAMC,QAAQ,GAAG;MAChBd,EAAE,EAAET,MAAM,CAAC,CAAC;MACZU,IAAI,EAAES;IACP,CAAC;IAEDE,WAAW,CAAC,GAAGd,QAAQ,EAAEgB,QAAQ,CAAC;IAClCH,WAAW,CAAC,EAAE,CAAC;EAClB,CAAC;EAED,oBACElB,OAAA,CAAAE,SAAA;IAAAO,QAAA,gBACET,OAAA;MAAAS,QAAA,EAAK;IAEL;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAENb,OAAA;MAAAS,QAAA,gBACIT,OAAA;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAc,CAAC,eACfb,OAAA;QAAQsB,OAAO,EAAEF,OAAQ;QAAAX,QAAA,EAAC;MAE1B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eAENb,OAAA;MAAAS,QAAA,eACIT,OAAA;QAAAS,QAAA,GAAI,uBACmB,eACnBT,OAAA;UAAAS,QAAA,EAAI;QAEJ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACN,GACH;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA,eACN,CAAC;AAGP;AAACG,EAAA,CAxCQD,GAAG;AAAAQ,GAAA,GAAHR,GAAG;AA0CZ,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAS,GAAA;AAAAC,YAAA,CAAAV,EAAA;AAAAU,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}